server {
    listen 80;
    server_name localhost;

    # WebSocket для MinIO Console
    location ^~ /minio-console/ws {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://minio:9001/ws;

        # увеличение таймаутов для WebSocket
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 30s;

        proxy_redirect off;
    }

    # API для MinIO Console
    location /minio-console/api/ {
        proxy_pass http://minio:9001/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # обработка redirect
        proxy_redirect http://minio:9001/api/ /minio-console/api/;
        proxy_redirect http://minio:9001/ /minio-console/;
    }

    # статика MinIO Console
    location /minio-console/ {
        proxy_pass http://minio:9001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # редиректы для остального интерфейса (не API, не WS)
        proxy_redirect http://minio:9001/ /minio-console/;

        # sub_filter для HTML/CSS/JS
        sub_filter_types text/html text/css application/javascript text/plain;
        sub_filter_once off;

        # замена абсолютных путей на пути под прокси
        sub_filter 'href="/' 'href="/minio-console/';
        sub_filter 'src="/' 'src="/minio-console/';
        sub_filter 'url(/' 'url(/minio-console/';

        # замена вызовов API и WS, если они указаны как относительные или без хоста
        sub_filter '"/api/' '"/minio-console/api/';
        sub_filter '"/ws/' '"/minio-console/ws/';
        sub_filter 'fetch("/' 'fetch("/minio-console/';
        sub_filter 'request("/' 'request("/minio-console/';

        # обработка cookie
        proxy_cookie_path / /minio-console;
    }

    # WebSocket для backend
    location /ws/ {
        proxy_pass http://backend:8000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }

    # API для backend
    location /api/ {
        proxy_pass http://backend:8000/;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        client_max_body_size 1M;
        proxy_read_timeout 30s;
    }

    # изображения из MinIO
    location /images/ {
        proxy_pass http://minio:9000/images/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # frontend
    location / {
        proxy_pass http://frontend:80;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 1M;
        add_header Cache-Control "public, no-cache";
    }
}
