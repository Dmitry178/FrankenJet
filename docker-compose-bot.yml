services:
  postgres:
    image: postgres:17.5
    container_name: fj-postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fj_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fj_pass}
      POSTGRES_DB: ${POSTGRES_DB:-fj}
      TZ: Europe/Moscow
    ports:
      - "${POSTGRES_PORT:-5436}:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - network

  minio:
    image: quay.io/minio/minio:RELEASE.2024-03-15T01-07-19Z
    container_name: fj-minio
    hostname: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-password}
    volumes:
      - ./volumes/s3:/data
    ports:
      - "${S3_API_PORT:-9910}:9000"
      - "${S3_CONSOLE_PORT:-9911}:9001"
    restart: unless-stopped
    networks:
      - network

  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: fj-rabbit
    hostname: rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5676}:5672"  # AMQP
      - "${RABBITMQ_MANAGEMENT_PORT:-15676}:15672"  # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_ADMIN_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_ADMIN_PASSWORD:-password}
      TZ: Europe/Moscow
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    networks:
      - network

  redis:
    image: redis:8.2.2-alpine3.22
    container_name: fj-redis
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-password}
    ports:
      - "6380:6379"
    volumes:
      - ./volumes/redis:/data

  notification-bot:
    build:
      context: ./notifications
      dockerfile: Dockerfile
    container_name: fj-notification-bot
    hostname: notifications
    depends_on:
      - postgres
      - rabbitmq
    environment:
      RMQ_CONN: ${RMQ_CONN:-amqp://admin:password@rabbitmq:5672}
    env_file:
      - ./notifications/bot.env
    restart: unless-stopped
    networks:
      - network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fj-backend
    hostname: backend
    depends_on:
      - postgres
      - rabbitmq
      - minio
    ports:
      - "${BACKEND_PORT:-8100}:8000"
    environment:
      DB_CONN: ${DB_CONN:-fj_user:fj_pass@postgres:5432/fj}
      RMQ_CONN: ${RMQ_CONN:-amqp://admin:password@rabbitmq:5672}
      CORS: ${CORS:-http://localhost:3100}
      ALLOW_AUTHENTICATION: ${ALLOW_AUTHENTICATION:-true}
      ALLOW_REGISTRATION: ${ALLOW_REGISTRATION:-true}
      ADMIN_USER: ${ADMIN_USER:-admin}
      ADMIN_PASS: ${ADMIN_PASS:-password}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-admin}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-password}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL:-http://localhost:9910}
    restart: unless-stopped
    networks:
      - network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        API_BASE_URL: ${API_BASE_URL:-http://localhost:8100}
    container_name: fj-frontend
    hostname: frontend
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-3100}:80"
    restart: unless-stopped
    networks:
      - network

networks:
  network:
    driver: bridge
